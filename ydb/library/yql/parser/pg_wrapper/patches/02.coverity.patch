diff -ruN postgresql/src/backend/access/common/heaptuple.c postgresql.patched/src/backend/access/common/heaptuple.c
--- postgresql/src/backend/access/common/heaptuple.c	2022-04-27 18:12:23.813625357 +0300
+++ postgresql.patched/src/backend/access/common/heaptuple.c	2022-04-27 18:11:34.777165793 +0300
@@ -332,14 +332,15 @@
 	for (i = 0; i < numberOfAttributes; i++)
 	{
 		Form_pg_attribute attr = TupleDescAttr(tupleDesc, i);
-
+		bool isNullAttribute = isnull ? isnull[i] : true;
+		Datum v = (isNullAttribute || !values) ? PointerGetDatum(NULL) : values[i];
 		fill_val(attr,
 				 bitP ? &bitP : NULL,
 				 &bitmask,
 				 &data,
 				 infomask,
-				 values ? values[i] : PointerGetDatum(NULL),
-				 isnull ? isnull[i] : true);
+				 v,
+				 isNullAttribute);
 	}
 
 	Assert((data - start) == data_size);
diff -ruN postgresql/src/backend/access/transam/twophase.c postgresql.patched/src/backend/access/transam/twophase.c
--- postgresql/src/backend/access/transam/twophase.c	2022-04-27 18:12:24.057627644 +0300
+++ postgresql.patched/src/backend/access/transam/twophase.c	2022-04-27 18:11:34.773165755 +0300
@@ -1073,6 +1073,7 @@
 	hdr.ninvalmsgs = xactGetCommittedInvalidationMessages(&invalmsgs,
 														  &hdr.initfileinval);
 	hdr.gidlen = strlen(gxact->gid) + 1;	/* Include '\0' */
+	hdr.origin_lsn = 0;
 
 	save_state_data(&hdr, sizeof(TwoPhaseFileHeader));
 	save_state_data(gxact->gid, hdr.gidlen);
diff -ruN postgresql/src/backend/storage/ipc/dsm.c postgresql.patched/src/backend/storage/ipc/dsm.c
--- postgresql/src/backend/storage/ipc/dsm.c	2022-04-27 18:12:26.021646051 +0300
+++ postgresql.patched/src/backend/storage/ipc/dsm.c	2022-04-27 18:11:34.781165830 +0300
@@ -920,7 +920,7 @@
 void
 dsm_pin_segment(dsm_segment *seg)
 {
-	void	   *handle;
+	void	   *handle = NULL;
 
 	/*
 	 * Bump reference count for this segment in shared memory. This will
diff -ruN postgresql/src/backend/storage/lmgr/proc.c postgresql.patched/src/backend/storage/lmgr/proc.c
--- postgresql/src/backend/storage/lmgr/proc.c	2022-04-27 18:12:25.893644851 +0300
+++ postgresql.patched/src/backend/storage/lmgr/proc.c	2022-04-27 18:11:34.785165867 +0300
@@ -1266,9 +1266,11 @@
 			timeouts[0].id = DEADLOCK_TIMEOUT;
 			timeouts[0].type = TMPARAM_AFTER;
 			timeouts[0].delay_ms = DeadlockTimeout;
+			timeouts[0].fin_time = 0;
 			timeouts[1].id = LOCK_TIMEOUT;
 			timeouts[1].type = TMPARAM_AFTER;
 			timeouts[1].delay_ms = LockTimeout;
+			timeouts[1].fin_time = 0;
 			enable_timeouts(timeouts, 2);
 		}
 		else
diff -ruN postgresql/src/backend/utils/mmgr/dsa.c postgresql.patched/src/backend/utils/mmgr/dsa.c
--- postgresql/src/backend/utils/mmgr/dsa.c	2022-04-27 18:12:24.777634391 +0300
+++ postgresql.patched/src/backend/utils/mmgr/dsa.c	2022-04-27 18:11:34.741165455 +0300
@@ -839,6 +839,7 @@
 	superblock = dsa_get_address(area, span->start);
 	object = dsa_get_address(area, dp);
 	size_class = span->size_class;
+	Assert(size_class < lengthof(dsa_size_classes));
 	size = dsa_size_classes[size_class];
 
 	/*
