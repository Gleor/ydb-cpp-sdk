<sql-statement>
--
-- BIT types
--
--
-- Build tables for testing
--
CREATE TABLE BIT_TABLE(b BIT(11));
</sql-statement>
<sql-statement>
INSERT INTO BIT_TABLE VALUES (B'10'); -- too short
</sql-statement>
<sql-statement>
INSERT INTO BIT_TABLE VALUES (B'00000000000');
</sql-statement>
<sql-statement>
INSERT INTO BIT_TABLE VALUES (B'11011000000');
</sql-statement>
<sql-statement>
INSERT INTO BIT_TABLE VALUES (B'01010101010');
</sql-statement>
<sql-statement>
INSERT INTO BIT_TABLE VALUES (B'101011111010'); -- too long
</sql-statement>
<sql-statement>
--INSERT INTO BIT_TABLE VALUES ('X554');
--INSERT INTO BIT_TABLE VALUES ('X555');
SELECT * FROM BIT_TABLE;
</sql-statement>
BackTrace(void**, unsigned long)+29 (0x14033ECD)
TBackTrace::Capture()+30 (0x1403443E)
TWithBackTrace<yexception>::TWithBackTrace<>()+72 (0x13FD0568)
NYT::TNode::TTypeError::TTypeError()+25 (0x144DC3E9)
NYT::TNode::CheckType(NYT::TNode::EType) const+267 (0x144DD9BB)
NYT::TNode::AsString() const+30 (0x144DC53E)
WriteTableToStream(IOutputStream&, TVector<NYT::TNode, std::__y1::allocator<NYT::TNode> > const&, TVector<NYT::TNode, std::__y1::allocator<NYT::TNode> > const&)+830 (0x13EBBB7E)
Main(int, char**)+5748 (0x13EC0FB4)
main+273 (0x13EC2761)
??+0 (0x7FDE59429D90)
__libc_start_main+128 (0x7FDE59429E40)
??+0 (0x13E4C029)

(NYT::TNode::TTypeError) library/cpp/yson/node/node.cpp:829: TNode type string_node expected, actual type null
